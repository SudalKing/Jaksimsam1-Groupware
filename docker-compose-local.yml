services:
  # -------- USER DB --------
  user-db:
    container_name: user-db
    image: postgres:12-alpine
    restart: always
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=users
    ports:
      - "5432:5432"
    command: -c wal_level=logical -p 5432

  # -------- AUTH DB --------
  auth-db:
    container_name: auth-db
    image: postgres:12-alpine
    restart: always
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=auth
    ports:
      - "5433:5432"
    command: -c wal_level=logical -p 5433

  # -------- REDIS --------
  user-redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    expose:
      - "6379"
    volumes:
      - ./redis/data:/data
    labels:
      - "name=redis"
      - "mode=standalone"

  # -------- ZOOKEEPER --------
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka-net

  # -------- KAFKA --------
  kafka1:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka1
    ports:
      - "8099:8099"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:8099,INTERNAL://kafka1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    restart: always
    networks:
      - kafka-net

  kafka2:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka2
    ports:
      - "8100:8100"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:8100,INTERNAL://kafka2:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    restart: always
    networks:
      - kafka-net

  # -------- KAFKA UI --------
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8200:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka1:9092,kafka2:9092
    depends_on:
      - kafka1
      - kafka2
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge