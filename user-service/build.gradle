plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.10'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.Jaksimsam1'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

bootJar {
	enabled = true
}

jar {
	enabled = false
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

//ext {
//	set('springCloudVersion', "2023.0.3")
//}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
//	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'org.postgresql:postgresql'

	/* QueryDSL */
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	/* Swagger: Spring Boot 3.0.x 이상부터 필요 */
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

//dependencyManagement {
//	imports {
//		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
//	}
//}

tasks.named('test') {
	useJUnitPlatform()
}

/* QueryDSL 설정 */
def queryDSLSrcDir = 'src/main/generated'

clean {
	delete file(queryDSLSrcDir)
}

tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(queryDSLSrcDir)
}